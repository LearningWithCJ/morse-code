#
#  _                                _                __          __ _  _    _        _____      _ 
# | |                              (_)               \ \        / /(_)| |  | |      / ____|    | |
# | |      ___   __ _  _ __  _ __   _  _ __    __ _   \ \  /\  / /  _ | |_ | |__   | |         | |
# | |     / _ \ / _` || '__|| '_ \ | || '_ \  / _` |   \ \/  \/ /  | || __|| '_ \  | |     _   | |
# | |____|  __/| (_| || |   | | | || || | | || (_| |    \  /\  /   | || |_ | | | | | |____| |__| |
# |______|\___| \__,_||_|   |_| |_||_||_| |_| \__, |     \/  \/    |_| \__||_| |_|  \_____|\____/ 
#                                              __/ |                                              
#                                             |___/                         -  By CJ
#
# YouTube : www.youtube.com/@LearningWithCJ
# GitHub  : www.github.com/LearningWithCJ
# Telegram: t.me/LearningWithCJ
#

alphaAndMorse = {
    'a' : ".-",   'n' : "-.",   '1' : ".----", ',' : "--..--", '@' : ".--.-.",
    'b' : "-...", 'o' : "---",  '2' : "..---", '.' : ".-.-.-", '&' : ".-...",
    'c' : "-.-.", 'p' : ".--.", '3' : "...--", '?' : "..--..", '!' : "-.-.--",
    'd' : "-..",  'q' : "--.-", '4' : "....-", '"' : ".-..-.", "'" : ".----.",
    'e' : ".",    'r' : ".-.",  '5' : ".....", ':' : "---...", '$' : "...-..-",
    'f' : "..-.", 's' : "...",  '6' : "-....", ';' : "-.-.-.", ' ' : "/",
    'g' : "--.",  't' : "-",    '7' : "--...", '_' : "..--.-",
    'h' : "....", 'u' : "..-",  '8' : "---..", '/' : "-..-.",
    'i' : "..",   'v' : "...-", '9' : "----.", '(' : "-.--.",
    'j' : ".---", 'w' : ".--",  '0' : "-----", ')' : "-.--.-",
    'k' : "-.-",  'x' : "-..-",                '+' : ".-.-.",
    'l' : ".-..", 'y' : "-.--",                '-' : "-....-",
    'm' : "--",   'z' : "--..",                '=' : "-...-",
}

def aToM(text):
    encrypted = ""
    for i in text.lower():
        if i in alphaAndMorse.keys():
            encrypted += alphaAndMorse[i] + " "
        else:
            encrypted += "*UNKNOW "
    print(encrypted.strip())


def mToA(code):
    decrypted = ""
    for i in code.split():
        if i in alphaAndMorse.values():
            decrypted += list(alphaAndMorse.keys())[list(alphaAndMorse.values()).index(i)]
        else:
            decrypted += "*UNKNOW "
    print(decrypted.strip())


aToM("Hello World!")
mToA(".... . .-.. .-.. --- / .-- --- .-. .-.. -.. -.-.--")